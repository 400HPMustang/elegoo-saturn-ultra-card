type: custom:auto-entities
unique: true
show_empty: false
card:
  type: custom:layout-card
  layout_type: masonry
card_param: cards
filter:
  template: >
    {%- set entities = integration_entities('elegoo_printer') -%} {%- set
    devices  = entities | map('device_id') | list -%} {%- set zip_list =
    zip(entities, devices) | list -%} [ {%- for d in (zip_list |
    map(attribute=1) | unique | list) -%}
      {%- set anchor = zip_list
            | selectattr(1,'eq', d)
            | selectattr(0,'search','_current_status$')
            | map(attribute=0) | list | first -%}
      {%- if not anchor -%}
        {%- set anchor = zip_list
              | selectattr(1,'eq', d)
              | selectattr(0,'search','_print_status$')
              | map(attribute=0) | list | first -%}
      {%- endif -%}
      {%- if not anchor %}{% continue %}{% endif -%}
      {%- set base = anchor.split('.')[1]
                      .replace('_current_status','')
                      .replace('_print_status','') -%}
      {%- set glow = '0 0 2px rgba(0,0,0,0.95), 0 0 8px rgba(255,255,255,0.95), 0 0 16px rgba(255,255,255,0.8)' -%}

      {{
        {
          'type': 'picture-elements',
          'image': '/local/saturn_4_ultra.png',
          'aspect_ratio': '1/1.4',
          'elements': [

            { 'type':'custom:hui-element',
              'card_type':'custom:button-card',
              'entity':'sensor.' ~ base ~ '_uv_led_temp',
              'name':'UV Temp',
              'show_icon': false, 'show_name': true, 'show_state': true,
              'layout': 'vertical',
              'tap_action': { 'action':'more-info' },
              'style': { 'top':'12%','left':'50%','transform':'translate(-50%,-50%)' },
              'styles': {
                'card': [
                  { 'width': '64px' }, { 'height': '64px' },
                  { 'border-radius': '50%' }, { 'background': 'rgba(0,0,0,0.35)' },
                  { 'box-shadow': '0 2px 10px rgba(0,0,0,0.4)' }, { 'padding': '6px 0 4px 0' }
                ],
                'name': [
                  { 'font-size': '10px' }, { 'line-height': '12px' },
                  { 'color': 'white' }, { 'text-shadow': glow }, { 'font-weight': '600' }
                ],
                'state': [
                  { 'font-size': '14px' }, { 'font-weight': '700' },
                  { 'line-height': '18px' }, { 'color': 'white' }, { 'text-shadow': glow }
                ]
              },
              'state_display': '[[[
                const id   = "sensor.' ~ base ~ '_uv_led_temp";
                const plug = hass.states["switch.' ~ base ~ '_power"]?.state;
                const st   = hass.states[id]?.state;
                const unit = hass.states[id]?.attributes?.unit_of_measurement || "";
                if (plug === "off" || !st || st === "unknown" || st === "unavailable") return "—";
                const n = parseFloat(st);
                if (isNaN(n)) return st;
                return `${n.toFixed(1)}${unit ? " " + unit : ""}`;
              ]]]'
            },

            { 'type':'custom:hui-element',
              'card_type':'custom:button-card',
              'show_icon': false, 'show_state': false, 'show_label': false, 'show_name': true,
              'name': '[[[
                const p = hass.states["switch.' ~ base ~ '_power"]?.state;
                if (p === "off") return "Off";
                const a = hass.states["sensor.' ~ base ~ '_current_status"]?.state;
                const b = hass.states["sensor.' ~ base ~ '_print_status"]?.state;
                const s = a ?? b ?? "";
                if (!s || s === "unknown" || s === "unavailable") return "Off";
                return s;
              ]]]',
              'style': { 'top':'69%','left':'68%','transform':'translate(-50%,-50%)' },
              'styles': {
                'card': [ { 'background':'rgba(0,0,0,0)' }, { 'box-shadow':'none' }, { 'padding':'0' } ],
                'name': [ { 'font-size':'14px' }, { 'font-weight':'600' }, { 'color':'white' }, { 'text-shadow': glow } ]
              }
            },

            { 'type':'custom:hui-element',
              'card_type':'custom:button-card',
              'show_icon': false, 'show_state': false, 'show_label': false, 'show_name': true,
              'name': '[[[
                const p = hass.states["switch.' ~ base ~ '_power"]?.state;
                if (p === "off") return "0%";
                const s = hass.states["sensor.' ~ base ~ '_percent_complete"]?.state ?? "";
                if (!s || s === "unknown" || s === "unavailable") return "0%";
                const n = parseFloat(s);
                if (!isNaN(n)) return `${Math.max(0, Math.min(100, Math.round(n)))}%`;
                return s;
              ]]]',
              'style': { 'top':'78%','left':'63%','transform':'translate(-50%,-50%)' },
              'styles': {
                'card': [ { 'background':'rgba(0,0,0,0)' }, { 'box-shadow':'none' }, { 'padding':'0' } ],
                'name': [ { 'font-size':'16px' }, { 'font-weight':'600' }, { 'color':'white' }, { 'text-shadow': glow } ]
              }
            },

            { 'type':'custom:hui-element',
              'card_type':'custom:button-card',
              'entity':'sensor.' ~ base ~ '_remaining_print_time',
              'show_icon': false, 'show_state': false, 'show_label': false, 'show_name': true,
              'tap_action': { 'action':'more-info' },
              'name': '[[[
                const p = hass.states["switch.' ~ base ~ '_power"]?.state;
                if (p === "off") return "0h 0m";
                const st = hass.states["sensor.' ~ base ~ '_remaining_print_time"]?.state ?? "";
                if (!st || st === "unknown" || st === "unavailable") return "—";
                const mins = parseFloat(st);
                if (isNaN(mins)) return "—";
                const m = Math.max(0, Math.round(mins));
                const h = Math.floor(m / 60);
                const r = m % 60;
                if (h > 0 && r > 0) return `${h}h ${r}m`;
                if (h > 0 && r === 0) return `${h}h`;
                return `${r}m`;
              ]]]',
              'style': { 'top':'78%','left':'72%','transform':'translate(-50%,-50%)' },
              'styles': {
                'card': [ { 'background':'rgba(0,0,0,0)' }, { 'box-shadow':'none' }, { 'padding':'0' } ],
                'name': [ { 'font-size':'16px' }, { 'font-weight':'600' }, { 'color':'white' }, { 'text-shadow': glow } ]
              }
            },

            { 'type':'custom:hui-element',
              'card_type':'picture-entity',
              'entity':'camera.' ~ base ~ '_chamber_camera',
              'show_name': false, 'show_state': false, 'camera_view':'auto',
              'style': {
                'top':'48%','left':'50%','width':'54%','border-radius':'12px',
                'overflow':'hidden','box-shadow':'0 6px 18px rgba(0,0,0,0.35)'
              } },

            { 'type':'custom:hui-element',
              'card_type':'custom:button-card',
              'show_icon': false, 'show_state': false, 'show_label': false, 'show_name': true,
              'name': '[[[
                const p = hass.states["switch.' ~ base ~ '_power"]?.state;
                if (p === "off") return "Layer: 0";
                const s = hass.states["sensor.' ~ base ~ '_current_layer"]?.state ?? "";
                const v = (!s || s === "unknown" || s === "unavailable") ? "0" : s;
                return `Layer: ${v}`;
              ]]]',
              'style': { 'top':'70%','left':'36%' },
              'styles': {
                'card': [ { 'background':'rgba(0,0,0,0)' }, { 'box-shadow':'none' }, { 'padding':'0' } ],
                'name': [ { 'font-size':'14px' }, { 'font-weight':'600' }, { 'color':'white' }, { 'text-shadow': glow } ]
              }
            },

            { 'type':'custom:hui-element',
              'card_type':'custom:button-card',
              'show_icon': false, 'show_state': false, 'show_label': false, 'show_name': true,
              'name': '[[[
                const p = hass.states["switch.' ~ base ~ '_power"]?.state;
                if (p === "off") return "Total: 0";
                const s = hass.states["sensor.' ~ base ~ '_total_layers"]?.state ?? "";
                const v = (!s || s === "unknown" || s === "unavailable") ? "0" : s;
                return `Total: ${v}`;
              ]]]',
              'style': { 'top':'76%','left':'35%' },
              'styles': {
                'card': [ { 'background':'rgba(0,0,0,0)' }, { 'box-shadow':'none' }, { 'padding':'0' } ],
                'name': [ { 'font-size':'14px' }, { 'font-weight':'600' }, { 'color':'white' }, { 'text-shadow': glow } ]
              }
            },

            { 'type':'conditional',
              'conditions': [
                { 'entity':'sensor.' ~ base ~ '_file_name', 'state_not':'unavailable' },
                { 'entity':'sensor.' ~ base ~ '_file_name', 'state_not':'unknown' },
                { 'entity':'sensor.' ~ base ~ '_file_name', 'state_not':'' }
              ],
              'elements': [
                { 'type':'state-label',
                  'entity':'sensor.' ~ base ~ '_file_name',
                  'content': '[[[
                    const raw = hass.states["sensor.' ~ base ~ '_file_name"]?.state || "";
                    const name = raw.split(/[\\\\/]/).pop().replace(/\\.[^.]+$/,"");
                    return name;
                  ]]]',
                  'style': {
                    'top':'30%','left':'50%','transform':'translate(-50%,-50%)',
                    'width':'15ch','max-width':'15ch',
                    'white-space':'nowrap','overflow':'hidden','text-overflow':'ellipsis',
                    'text-align':'center','font-size':'14px','font-weight':'700',
                    'color':'white','text-shadow': glow
                  }
                }
              ]
            },

            
            { 'type':'conditional',
              'conditions': [
                { 'entity':'switch.' ~ base ~ '_power', 'state':'on' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state_not':'idle' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state_not':'complete' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state_not':'stopped' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state_not':'paused' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state_not':'pausing' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state_not':'stopping' }
              ],
              'elements': [
                { 'type':'icon', 'icon':'mdi:pause',
                  'tap_action': { 'action':'call-service','service':'button.press',
                    'data': { 'entity_id':'button.' ~ base ~ '_pause_print' } },
                  'style': { 'top':'93%','left':'42%','--mdc-icon-size':'26px','color':'white' } }
              ] },


            { 'type':'conditional',
              'conditions':[ { 'entity':'switch.' ~ base ~ '_power', 'state':'off' } ],
              'elements':[ { 'type':'icon','icon':'mdi:pause',
                'style':{ 'top':'93%','left':'42%','--mdc-icon-size':'26px','opacity':'0.5','color':'white','pointer-events':'none' } } ] },

            
            { 'type':'conditional', 'conditions':[ { 'entity':'sensor.' ~ base ~ '_print_status', 'state':'paused' } ],
              'elements':[ { 'type':'icon','icon':'mdi:pause','style':{ 'top':'93%','left':'42%','--mdc-icon-size':'26px','opacity':'0.5','color':'white','pointer-events':'none' } } ] },
            { 'type':'conditional', 'conditions':[ { 'entity':'sensor.' ~ base ~ '_print_status', 'state':'pausing' } ],
              'elements':[ { 'type':'icon','icon':'mdi:pause','style':{ 'top':'93%','left':'42%','--mdc-icon-size':'26px','opacity':'0.5','color':'white','pointer-events':'none' } } ] },
            { 'type':'conditional', 'conditions':[ { 'entity':'sensor.' ~ base ~ '_print_status', 'state':'idle' } ],
              'elements':[ { 'type':'icon','icon':'mdi:pause','style':{ 'top':'93%','left':'42%','--mdc-icon-size':'26px','opacity':'0.5','color':'white','pointer-events':'none' } } ] },
            { 'type':'conditional', 'conditions':[ { 'entity':'sensor.' ~ base ~ '_print_status', 'state':'complete' } ],
              'elements':[ { 'type':'icon','icon':'mdi:pause','style':{ 'top':'93%','left':'42%','--mdc-icon-size':'26px','opacity':'0.5','color':'white','pointer-events':'none' } } ] },
            { 'type':'conditional', 'conditions':[ { 'entity':'sensor.' ~ base ~ '_print_status', 'state':'stopped' } ],
              'elements':[ { 'type':'icon','icon':'mdi:pause','style':{ 'top':'93%','left':'42%','--mdc-icon-size':'26px','opacity':'0.5','color':'white','pointer-events':'none' } } ] },
            { 'type':'conditional', 'conditions':[ { 'entity':'sensor.' ~ base ~ '_print_status', 'state':'stopping' } ],
              'elements':[ { 'type':'icon','icon':'mdi:pause','style':{ 'top':'93%','left':'42%','--mdc-icon-size':'26px','opacity':'0.5','color':'white','pointer-events':'none' } } ] },

            
            { 'type':'conditional',
              'conditions':[ { 'entity':'sensor.' ~ base ~ '_print_status', 'state':'paused' } ],
              'elements':[ { 'type':'icon','icon':'mdi:play',
                'tap_action':{ 'action':'call-service','service':'button.press','data':{ 'entity_id':'button.' ~ base ~ '_resume_print' } },
                'style':{ 'top':'93%','left':'52%','--mdc-icon-size':'26px','color':'white' } } ] },

            
            { 'type':'conditional',
              'conditions':[ { 'entity':'sensor.' ~ base ~ '_print_status', 'state_not':'paused' } ],
              'elements':[ { 'type':'icon','icon':'mdi:play',
                'style':{ 'top':'93%','left':'52%','--mdc-icon-size':'26px','opacity':'0.5','color':'white','pointer-events':'none' } } ] },

            
            { 'type':'conditional',
              'conditions': [
                { 'entity':'switch.' ~ base ~ '_power', 'state':'on' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state_not':'idle' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state_not':'complete' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state_not':'stopped' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state_not':'stopping' }
              ],
              'elements': [
                { 'type':'icon', 'icon':'mdi:stop',
                  'tap_action': { 'action':'call-service','service':'button.press',
                    'data': { 'entity_id':'button.' ~ base ~ '_stop_print' } },
                  'style': { 'top':'93%','left':'62%','--mdc-icon-size':'26px','color':'white' } }
              ] },

          
            { 'type':'conditional',
              'conditions':[ { 'entity':'switch.' ~ base ~ '_power', 'state':'off' } ],
              'elements':[ { 'type':'icon','icon':'mdi:stop',
                'style':{ 'top':'93%','left':'62%','--mdc-icon-size':'26px','opacity':'0.5','color':'white','pointer-events':'none' } } ] },


            { 'type':'conditional', 'conditions':[ { 'entity':'sensor.' ~ base ~ '_print_status', 'state':'idle' } ],
              'elements':[ { 'type':'icon','icon':'mdi:stop','style':{ 'top':'93%','left':'62%','--mdc-icon-size':'26px','opacity':'0.5','color':'white','pointer-events':'none' } } ] },
            { 'type':'conditional', 'conditions':[ { 'entity':'sensor.' ~ base ~ '_print_status', 'state':'complete' } ],
              'elements':[ { 'type':'icon','icon':'mdi:stop','style':{ 'top':'93%','left':'62%','--mdc-icon-size':'26px','opacity':'0.5','color':'white','pointer-events':'none' } } ] },
            { 'type':'conditional', 'conditions':[ { 'entity':'sensor.' ~ base ~ '_print_status', 'state':'stopped' } ],
              'elements':[ { 'type':'icon','icon':'mdi:stop','style':{ 'top':'93%','left':'62%','--mdc-icon-size':'26px','opacity':'0.5','color':'white','pointer-events':'none' } } ] },
            { 'type':'conditional', 'conditions':[ { 'entity':'sensor.' ~ base ~ '_print_status', 'state':'stopping' } ],
              'elements':[ { 'type':'icon','icon':'mdi:stop','style':{ 'top':'93%','left':'62%','--mdc-icon-size':'26px','opacity':'0.5','color':'white','pointer-events':'none' } } ] },

           
            { 'type':'conditional',
              'conditions': [
                { 'entity':'sensor.' ~ base ~ '_error_status_reason', 'state_not':'ok' },
                { 'entity':'sensor.' ~ base ~ '_error_status_reason', 'state_not':'unavailable' }
              ],
              'elements': [
                { 'type':'state-label', 'entity':'sensor.' ~ base ~ '_error_status_reason',
                  'style': {
                    'top':'60%','left':'50%','transform':'translate(-50%,-50%)',
                    'font-size':'14px','font-weight':'700',
                    'color':'#ffd9d9','text-shadow': glow
                  } }
              ]
            },

        
            { 'type':'conditional',
              'conditions': [
                { 'entity':'switch.' ~ base ~ '_power', 'state_not':'unknown' },
                { 'entity':'switch.' ~ base ~ '_power', 'state_not':'unavailable' },
                { 'entity':'switch.' ~ base ~ '_power', 'state':'off' }
              ],
              'elements': [
                { 'type':'icon', 'icon':'mdi:power',
                  'tap_action': { 'action':'call-service','service':'switch.toggle',
                    'data': { 'entity_id':'switch.' ~ base ~ '_power' } },
                  'hold_action': { 'action':'more-info' },
                  'style': { 'top':'93%','left':'72%','--mdc-icon-size':'26px','color':'white' } }
              ]
            },
            { 'type':'conditional',
              'conditions': [
                { 'entity':'switch.' ~ base ~ '_power', 'state_not':'unknown' },
                { 'entity':'switch.' ~ base ~ '_power', 'state_not':'unavailable' },
                { 'entity':'switch.' ~ base ~ '_power', 'state':'on' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state':'idle' }
              ],
              'elements': [
                { 'type':'icon', 'icon':'mdi:power',
                  'tap_action': { 'action':'call-service','service':'switch.toggle',
                    'data': { 'entity_id':'switch.' ~ base ~ '_power' } },
                  'hold_action': { 'action':'more-info' },
                  'style': { 'top':'93%','left':'72%','--mdc-icon-size':'26px','color':'white' } }
              ]
            },
            { 'type':'conditional',
              'conditions': [
                { 'entity':'switch.' ~ base ~ '_power', 'state_not':'unknown' },
                { 'entity':'switch.' ~ base ~ '_power', 'state_not':'unavailable' },
                { 'entity':'switch.' ~ base ~ '_power', 'state':'on' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state':'complete' }
              ],
              'elements': [
                { 'type':'icon', 'icon':'mdi:power',
                  'tap_action': { 'action':'call-service','service':'switch.toggle',
                    'data': { 'entity_id':'switch.' ~ base ~ '_power' } },
                  'hold_action': { 'action':'more-info' },
                  'style': { 'top':'93%','left':'72%','--mdc-icon-size':'26px','color':'white' } }
              ]
            },
            { 'type':'conditional',
              'conditions': [
                { 'entity':'switch.' ~ base ~ '_power', 'state_not':'unknown' },
                { 'entity':'switch.' ~ base ~ '_power', 'state_not':'unavailable' },
                { 'entity':'switch.' ~ base ~ '_power', 'state':'on' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state':'stopped' }
              ],
              'elements': [
                { 'type':'icon', 'icon':'mdi:power',
                  'tap_action': { 'action':'call-service','service':'switch.toggle',
                    'data': { 'entity_id':'switch.' ~ base ~ '_power' } },
                  'hold_action': { 'action':'more-info' },
                  'style': { 'top':'93%','left':'72%','--mdc-icon-size':'26px','color':'white' } }
              ]
            },
            { 'type':'conditional',
              'conditions': [
                { 'entity':'switch.' ~ base ~ '_power', 'state_not':'unknown' },
                { 'entity':'switch.' ~ base ~ '_power', 'state_not':'unavailable' },
                { 'entity':'switch.' ~ base ~ '_power', 'state':'on' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state_not':'idle' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state_not':'complete' },
                { 'entity':'sensor.' ~ base ~ '_print_status', 'state_not':'stopped' }
              ],
              'elements': [
                { 'type':'icon', 'icon':'mdi:power',
                  'style': { 'top':'93%','left':'72%','--mdc-icon-size':'26px','opacity':'0.5','color':'white','pointer-events':'none' } }
              ]
            }
          ]
        }
      }}

      {{ "," if not loop.last else "" }}
    {%- endfor -%} ]
grid_options:
  columns: full
  rows: 1
